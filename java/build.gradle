plugins {
  id 'java-library'
  id "com.jfrog.bintray" version "1.7.3"
  id 'maven-publish'
  id 'eclipse'
}

repositories {
  jcenter()
}

sourceSets {
  testCompile {
    java.srcDir "./src/live-test/java"
  }
  generated {
    java.srcDir "./build/gen-src"
  }
}

dependencies {
  api 'org.web3j:core:2.3.1'
  testCompile 'junit:junit:4.12'
}

version = '0.1.1'

jar {
  manifest {
    attributes(
      'Implementation-Title': project.name,
      'Implementation-Version': project.version
    )
  }
}

task initWeb3jCLI(dependsOn: init) {
  description 'Downloads and prepares the Web3j command line interface'
  group 'Ethereum'
  doLast {
    ant.mkdir(dir: './build')
    ant.get(src: 'https://github.com/web3j/web3j/releases/download/v2.3.1/web3j-2.3.1.zip', dest: './build/web3j.zip')
    ant.unzip(src: './build/web3j.zip', dest: './build')
    ant.move(file: './build/web3j-2.3.1', tofile: './build/web3j')
    ant.chmod(file: './build/web3j/bin/web3j', perm: 'ugo+x')
  }
  onlyIf {
    !file("./build/web3j").exists() 
  }
}

task generateContractBackchainWrapper(type: Exec, dependsOn: initWeb3jCLI) {
  description 'Generates java classes representing the ContractBackchain smart contract'
  group 'Ethereum'
  workingDir '.'
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    commandLine 'build/web3j/bin/web3j.bat', 'solidity', 'generate', '../ContentBackchainABI.bin', '../ContentBackchainABI.json', '-o', 'build/gen-src', '-p', 'com.onenetwork.backchain.client.eth'
  }
  else {
    commandLine 'build/web3j/bin/web3j', 'solidity', 'generate', '../ContentBackchainABI.bin', '../ContentBackchainABI.json', '-o', 'build/gen-src', '-p', 'com.onenetwork.backchain.client.eth'
  }
  doLast {
    ant.replaceregexp(file: 'build/gen-src/com/onenetwork/backchain/client/eth/ContentBackchainABI.java', match: 'public final class ContentBackchainABI', replace: 'class ContentBackchainABI')
  }
  onlyIf {
    !file("./build/gen-src/com/onenetwork/backchain/client/eth/ContentBackchainABI.java").exists() 
  }
}

task generateDisputeBackchainWrapper(type: Exec, dependsOn: initWeb3jCLI) {
  description 'Generates java classes representing the DisputeBackchain smart contract'
  group 'Ethereum'
  workingDir '.'
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
      commandLine 'build/web3j/bin/web3j.bat', 'solidity', 'generate', '../DisputeBackchainABI.bin', '../DisputeBackchainABI.json', '-o', 'build/gen-src', '-p', 'com.onenetwork.backchain.client.eth'
  }
  else {
      commandLine 'build/web3j/bin/web3j.bat', 'solidity', 'generate', '../DisputeBackchainABI.bin', '../DisputeBackchainABI.json', '-o', 'build/gen-src', '-p', 'com.onenetwork.backchain.client.eth'
  }
  doLast {
    ant.replaceregexp(file: 'build/gen-src/com/onenetwork/backchain/client/eth/DisputeBackchainABI.java', match: 'public final class DisputeBackchainABI', replace: 'class DisputeBackchainABI')
  }
  onlyIf {
    !file("./build/gen-src/com/onenetwork/backchain/client/eth/DisputeBackchainABI.java").exists() 
  }
}

compileJava {
  dependsOn generateContractBackchainWrapper
  dependsOn generateDisputeBackchainWrapper
  source += sourceSets.generated.java
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      groupId 'com.onenetwork.onechain'
      artifactId 'onechain-back-client'
      version '0.1.1'
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['mavenJava']
  pkg {
    repo = 'onechain'
    name = 'onechain-back-client'
    userOrg = 'onenetwork'
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/onenetwork/onechain-back-client'
    version {
      name = '0.1.1'
      desc = 'onechain-back-client 0.1.1'
      released = new Date()
    }
  }
}
